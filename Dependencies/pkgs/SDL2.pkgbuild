pkgname=SDL2
pkgver=2.0.20
pkgrel=2
sources=(
    "https://github.com/libsdl-org/SDL/releases/download/release-2.0.20/SDL2-2.0.20.tar.gz"
    'SDL2-disable-libs.patch'
    'SDL2-windows-haptic.patch'
    'SDL2-droid-noglctx-handle.patch'
    'SDL2-eventloop-mac.patch'
    'SDL2-force-metal-ios.patch'
    'SDL2-sensor-ios.patch'
)
hashes=(
    'c56aba1d7b5b0e7e999e4a7698c70b63a3394ff9704b5f6e1c57e0c16f04dd06'
    'c850a6c939dbf7b42645e96f31244d05168e930e3ebf88c738bf03f9bc2873be'
    '8d9508f064a03040cee365de61e350af68c47c21c21175a4243fb675aed8e8c0'
    'd2360b18140c871442e0b4b7a12462aea1e1cd9dae72b454359e4d808a0f6223'
    '18ac95ccc0a915f795bb3a6986beea60fce178729fd3486e1135963c09de3a39'
)

cflags="-O3"
cflags_win32="-I$outdir/include/khronos"

configopts_win32=(
    '--enable-video-opengles1'
    '--enable-video-opengles2'
)

configopts_mac_extra=(
    '--disable-video-x11'
    '--disable-render-metal'
)

if option_set 'dynamic_sdl'; then
    sharedstatic="static"
    ldflags_win32="-lshlwapi"
else
    sharedstatic="shared"
fi

configopts=(
    "--disable-$sharedstatic"
    '--disable-nas'
    '--enable-sse2' 
    '--enable-haptic'
    '--enable-joystick'
    "--libdir=$outdir/lib"
)

cflags_ios_extra=(
    '-fobjc-arc'
)

configopts_droid=(
    '--disable-pulseaudio'
)

prebuild() {
    pushd "$pkgname-$pkgver" &>/dev/null

    apply_patch "${sources[1]}"
    apply_patch "${sources[2]}"
    # This is necessary because SDL_GL_MakeCurrent is not thread-safe
    apply_patch "${sources[3]}"
    
    case $(getTarget) in
        darwin-iOS)
            apply_patch "${sources[4]}"
	    apply_patch "${sources[5]}"
            apply_patch "${sources[6]}"
        ;;
        darwin-macOS)
            apply_patch "${sources[4]}"
        ;;
        droid)
            export CC="$(getCC)"
            export CXX="$(getCXX)"
        ;;
    esac

    autogen
}

compile() {
    case $(getTarget) in
        darwin-iOS)
            cp include/SDL_config_iphoneos.h include/SDL_config.h
        ;;
    esac

    local logfile="$logdir/$pkgname.compile.log"
    local ret=0
    make $MAKEOPTS &>"$logfile" || ret=$?
    if (( $ret )); then
        tail -n 20 "$logfile"
        error "Compiling %s failed" "$pkgname"
        error "The last 20 lines of the log are shown above."
        error "The full log is: %s" "$logfile"
        exit 1
    fi
}

postbuild() {

    # Windows is known for its sane MSYS
    if [ "$(getTarget)" == "win32" ]; then
        local cfgfile=$(cat "$outdir/bin/sdl2-config")
        cfgfile=${cfgfile//" -XCClinker"/""}
        echo "$cfgfile" >"$outdir/bin/sdl2-config"
    elif [ "$(getTarget)" == "win32" ]; then
        unset CC
        unset CXX
    fi
     
    popd &>/dev/null
}

# vim: set syntax=sh:
