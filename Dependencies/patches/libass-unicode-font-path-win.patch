diff -rupN a/libass/ass_font.c b/libass/ass_font.c
--- a/libass/ass_font.c	2016-12-29 03:48:05.000000000 +0300
+++ b/libass/ass_font.c	2017-02-01 15:50:41.452304400 +0300
@@ -27,6 +27,8 @@
 #include FT_TRUETYPE_TABLES_H
 #include FT_OUTLINE_H
 #include <limits.h>
+#include <stdio.h>
+#include <stringapiset.h>
 
 #include "ass.h"
 #include "ass_library.h"
@@ -131,6 +133,22 @@ close_stream_font(FT_Stream stream)
     free(stream);
 }
 
+static unsigned long
+read_stream_font_file(FT_Stream stream, unsigned long offset, unsigned char *buffer,
+                 unsigned long count)
+{
+    FILE *fp = (FILE *)stream->descriptor.pointer;
+    _fseeki64(fp, offset, SEEK_SET);
+    return fread(buffer, sizeof(unsigned char), count, fp);
+}
+
+static void
+close_stream_font_file(FT_Stream stream)
+{
+    fclose((FILE *)stream->descriptor.pointer);
+    free(stream);
+}
+
 /**
  * \brief Select a face with the given charcode and add it to ASS_Font
  * \return index of the new face in font->faces, -1 if failed
@@ -184,7 +202,38 @@ static int add_face(ASS_FontSelector *fo
         }
 
     } else {
-        error = FT_New_Face(font->ftlibrary, path, index, &face);
+        wchar_t wpath[PATH_MAX];
+        FILE *fp = NULL;
+        DWORD WINAPI GetLastError(void);
+        
+        if (MultiByteToWideChar(CP_UTF8, 0, path, -1, wpath, PATH_MAX)) {
+            fp = _wfopen(wpath, L"rb");
+        } else {
+            ass_msg(font->library, MSGL_WARN,
+                    "Error obtaining unicode path for font: '%s', %d (code: %d)", path, index, GetLastError());
+            return -1;
+        }
+        
+        if (fp) {
+            FT_Open_Args args;
+            FT_Stream ftstream = calloc(1, sizeof(FT_StreamRec));
+
+            ftstream->size  = 0x7FFFFFFF;
+            ftstream->read  = read_stream_font_file;
+            ftstream->close = close_stream_font_file;
+            ftstream->descriptor.pointer = (void *)fp;
+
+            memset(&args, 0, sizeof(FT_Open_Args));
+            args.flags  = FT_OPEN_STREAM;
+            args.stream = ftstream;
+
+            error = FT_Open_Face(font->ftlibrary, &args, index, &face);
+        } else {
+            ass_msg(font->library, MSGL_WARN,
+                    "Error opening font file: '%s', %d (code: %d)", path, index, errno);
+            return -1;
+        }
+        
         if (error) {
             ass_msg(font->library, MSGL_WARN,
                     "Error opening font: '%s', %d", path, index);
